import Application from "./Application.mjs";
import http from "http";

class Main{
    constructor(){
    	let app = new Application();
    	app.set("port", Main.normailizePort(process.env.PORT || '3000'));
    	let server = http.createServer(app);
		server.listen(port);

		this.app = app;
		this.server = server;

		server.on('error', Main.onError);
		server.on('listening', Main.onListening);
    }
	static normalizePort(val){
		let port = parseInt(val, 10);
  		if (isNaN(port)) {
    		// named pipe
    		return val;
  		}
  		if (port >= 0) {
    		// port number
    		return port;
  		}
  		return false;
	}
	static onError(error){
		if (error.syscall !== 'listen') {
			throw error;
		}

		let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

		// handle specific listen errors with friendly messages
		switch (error.code) {
			case 'EACCES':
				console.error(bind + ' requires elevated privileges');
				process.exit(1);
				break;
			case 'EADDRINUSE':
				console.error(bind + ' is already in use');
				process.exit(1);
				break;
			default:
				throw error;
		}
	}
	static onListening(){
		let addr = this.server.address();
		let bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
	}
}
(()=>{
	new Main();
});
